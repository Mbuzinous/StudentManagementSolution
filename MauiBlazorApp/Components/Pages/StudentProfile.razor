@page "/student/{StudyId?}"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>@(StudyId == "new" ? "Opret ny elev" : "Rediger elev")</h3>

<EditForm Model="student" OnValidSubmit="SaveStudent">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label class="form-label">Fornavn</label>
        <InputText class="form-control" @bind-Value="student.FirstName" />
        <ValidationMessage For="() => student.FirstName" />
    </div>
    <div class="mb-3">
        <label class="form-label">Efternavn</label>
        <InputText class="form-control" @bind-Value="student.LastName" />
        <ValidationMessage For="() => student.LastName" />
    </div>
    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText class="form-control" @bind-Value="student.Email" />
        <ValidationMessage For="() => student.Email" />
    </div>
    <div class="mb-3">
        <label class="form-label">Studie-ID</label>
        <InputText class="form-control" @bind-Value="student.StudyId" disabled="@(StudyId != "new")" />
        <ValidationMessage For="() => student.StudyId" />
    </div>
    <button type="submit" class="btn btn-primary">Gem</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Annuller</button>
</EditForm>

@code {
    [Parameter] public string StudyId { get; set; }
    private Student student = new();

    protected override async Task OnInitializedAsync()
    {
        if (StudyId != "new")
        {
            student = await Http.GetFromJsonAsync<Student>($"api/students/{StudyId}");
        }
    }

    private async Task SaveStudent()
    {
        if (StudyId == "new")
        {
            await Http.PostAsJsonAsync("api/students", student);
        }
        else
        {
            await Http.PutAsJsonAsync($"api/students/{StudyId}", student);
        }
        Navigation.NavigateTo("/students");
    }

    private void Cancel() => Navigation.NavigateTo("/students");

    public class Student
    {
        public string FirstName { get; set; } = "";
        public string LastName { get; set; } = "";
        public string Email { get; set; } = "";
        public string StudyId { get; set; } = "";
        public Dictionary<DateTime, bool> Absence { get; set; } = new();
    }
}